<?xml version="1.0" encoding="UTF-8"?>
<SQL>
<query><sqlindex>1</sqlindex><statment>IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'TRANSEMPBASIC_insert ' AND [type] = 'TR')&#xD;
BEGIN&#xD;
    DROP TRIGGER TRANSEMPBASIC_insert ;&#xD;
end;</statment></query><query><sqlindex>2</sqlindex><statment>CREATE TRIGGER TRANSEMPBASIC_insert  ON EMPBASIC for INSERT AS&#xD;
begin transaction&#xD;
INSERT INTO LOGIN_USERS&#xD;
         (ID,EMPCODE,NAME,end_serv, email)&#xD;
    SELECT&#xD;
        EMPCODE  , EMPCODE , EMPNAME, END_SERV, EMAIL&#xD;
        FROM inserted&#xD;
insert into COMMON_EMPLOYEE&#xD;
        (id,FIRSTNAME,LASTNAME,JOBTITLE,EMAIL,USERS,EMPCODE)&#xD;
        select&#xD;
        EMPCODE,EMPNAME,EMPNAME,'general',EMAIL,EMPCODE,EMPCODE&#xD;
        from inserted&#xD;
insert into SECURITY_USERS&#xD;
        (id,USERNAME,PASSWORD,DEFAULTLOCALE,DEFAULTAPPLICATION,ISACTIVE,ISEMPLOYEE)&#xD;
        select&#xD;
        EMPCODE,CAST(EMPCODE as int),'123',1,12,1,1&#xD;
        from inserted&#xD;
insert into SECURITY_USER_ROLES&#xD;
        (users,role)&#xD;
        select&#xD;
        EMPCODE,1&#xD;
        from inserted&#xD;
commit transaction</statment></query><query><sqlindex>3</sqlindex><statment>begin transaction&#xD;
IF EXISTS (SELECT * FROM sys.objects WHERE [name] = N'TRANSEMPBASIC_update' AND [type] = 'TR')&#xD;
BEGIN&#xD;
    DROP TRIGGER TRANSEMPBASIC_update;&#xD;
end;</statment></query><query><sqlindex>4</sqlindex><statment>
CREATE TRIGGER TRANSEMPBASIC_update  ON EMPBASIC after update AS&#xD;
begin transaction&#xD;
update LOGIN_USERS&#xD;
set&#xD;
LOGIN_USERS.NAME= inserted.empname ,&#xD;
LOGIN_USERS.end_serv=inserted.END_SERV,&#xD;
LOGIN_USERS.email=inserted.EMAIL&#xD;
FROM   LOGIN_USERS JOIN inserted&#xD;
ON LOGIN_USERS.EMPCODE = inserted.EMPCODE&#xD; 
update COMMON_EMPLOYEE&#xD;
set&#xD;
COMMON_EMPLOYEE.FIRSTNAME=inserted.EMPNAME,&#xD;
COMMON_EMPLOYEE.LASTNAME=inserted.EMPNAME&#xD;
from COMMON_EMPLOYEE join inserted&#xD;
on COMMON_EMPLOYEE.EMPCODE=inserted.EMPCODE;&#xD;
update security_users&#xD;
set&#xD;
SECURITY_USERS.end_serv=inserted.END_SERV&#xD;
from SECURITY_USERS join inserted&#xD;
on SECURITY_USERS.USERNAME= CAST(inserted.EMPCODE as int);&#xD;
commit transaction</statment></query></SQL>
